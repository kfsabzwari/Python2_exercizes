commit c61f95e57abf34195098d7130626d8747930f38b
Author: Grant Jenks <contact@grantjenks.com>
Date:   Tue Jan 23 17:56:36 2018 -0800

    Use property and name-mangling to support Government

diff --git a/circuitous.py b/circuitous.py
index c0c600b..779b941 100644
--- a/circuitous.py
+++ b/circuitous.py
@@ -18,13 +18,16 @@ class Circle(object):
 
     """
     version = Version(0, 1, 0)
+    __slots__ = ['diameter']
     
     def __init__(self, radius):
         self.radius = float(radius)
 
     def area(self):
         "Perform quadrature of a planar shape of uniform revolution."
-        return math.pi * self.radius**2.0
+        p = self.__perimeter()
+        radius = p / 2.0 / math.pi
+        return math.pi * radius**2.0
 
     def perimeter(self):
         """ Compute the closed line integral for locus of 2-D points
@@ -33,6 +36,8 @@ class Circle(object):
         """
         return 2.0 * math.pi * self.radius
 
+    __perimeter = perimeter
+
     def __repr__(self):
         return '%s(%r)' % (self.__class__.__name__, self.radius)
 
@@ -49,5 +54,24 @@ class Circle(object):
 
     from_bbd = classmethod(from_bbd)
 
+    # Cry! Cry! Cry!
+    # Fairy God Mother
+
+    def get_radius(self):
+        return self.diameter / 2.0
+
+    def set_radius(self, radius):
+        self.diameter = radius * 2.0
+
+    """ I wish, I wish that EVERYWHERE someone wrote c.radius that MAGICALLY
+        c.get_radius() would be called without me changing ANY code
+        (including my own), AND I wish that EVERYWHERE someone set
+        c.radius = value that MAGICALLY c.set_radius(value) would be
+        called without me changging ANY code (including my own)
+
+    """
+    radius = property(get_radius, set_radius)
+    
+
 
 

commit a36295597aba8c441c2e49a521e271e9ebb4fab8
Author: Grant Jenks <contact@grantjenks.com>
Date:   Tue Jan 23 16:40:49 2018 -0800

    Change code to use staticmethod and classmethod

diff --git a/circuitous.py b/circuitous.py
index 0ec8821..c0c600b 100644
--- a/circuitous.py
+++ b/circuitous.py
@@ -20,7 +20,7 @@ class Circle(object):
     version = Version(0, 1, 0)
     
     def __init__(self, radius):
-        self.radius = radius
+        self.radius = float(radius)
 
     def area(self):
         "Perform quadrature of a planar shape of uniform revolution."
@@ -36,3 +36,18 @@ class Circle(object):
     def __repr__(self):
         return '%s(%r)' % (self.__class__.__name__, self.radius)
 
+    def angle_to_grade(angle):
+        "Convert an inclinometer reading in degrees to percent grade."
+        return math.tan(math.radians(angle)) * 100.0
+
+    angle_to_grade = staticmethod(angle_to_grade)
+
+    def from_bbd(cls, bbd):
+        "Create a new circle from bounding box diagonal."
+        radius = bbd / 2.0 / math.sqrt(2.0)
+        return cls(radius)
+
+    from_bbd = classmethod(from_bbd)
+
+
+

commit 77262fdd71ecc5824ad2ae018468f014b1c2bad9
Author: Grant Jenks <contact@grantjenks.com>
Date:   Tue Jan 23 15:33:04 2018 -0800

    Add perimeter and repr

diff --git a/circuitous.py b/circuitous.py
index 85b79d4..0ec8821 100644
--- a/circuitous.py
+++ b/circuitous.py
@@ -25,3 +25,14 @@ class Circle(object):
     def area(self):
         "Perform quadrature of a planar shape of uniform revolution."
         return math.pi * self.radius**2.0
+
+    def perimeter(self):
+        """ Compute the closed line integral for locus of 2-D points
+            equidistant from a single point.
+
+        """
+        return 2.0 * math.pi * self.radius
+
+    def __repr__(self):
+        return '%s(%r)' % (self.__class__.__name__, self.radius)
+

commit 501fa8bec8dba50574db8d7d2db3264738723c73
Author: Grant Jenks <contact@grantjenks.com>
Date:   Tue Jan 23 10:47:43 2018 -0800

    Add Version named tuple and demo code

diff --git a/circuitous.py b/circuitous.py
index f257981..85b79d4 100644
--- a/circuitous.py
+++ b/circuitous.py
@@ -7,6 +7,9 @@ circle management tasks to make the world a better place.
 """
 
 import math
+from collections import namedtuple
+
+Version = namedtuple('Version', ['major', 'minor', 'micro'])
 
 class Circle(object):
     """Create a circle instance from a radius.
@@ -14,6 +17,8 @@ class Circle(object):
     As part of an advanced circle analytics toolkit.
 
     """
+    version = Version(0, 1, 0)
+    
     def __init__(self, radius):
         self.radius = radius
 

commit 52c1c5e1a148dd710886c88edcf97867ea8d70fa
Author: Grant Jenks <contact@grantjenks.com>
Date:   Tue Jan 23 09:57:17 2018 -0800

    Add method docstrings

diff --git a/circuitous.py b/circuitous.py
index 4ef8975..f257981 100644
--- a/circuitous.py
+++ b/circuitous.py
@@ -9,9 +9,14 @@ circle management tasks to make the world a better place.
 import math
 
 class Circle(object):
+    """Create a circle instance from a radius.
 
+    As part of an advanced circle analytics toolkit.
+
+    """
     def __init__(self, radius):
         self.radius = radius
 
     def area(self):
+        "Perform quadrature of a planar shape of uniform revolution."
         return math.pi * self.radius**2.0

commit 80a0d9129f3280a51c1c149bd15d07c6127e0367
Author: Grant Jenks <contact@grantjenks.com>
Date:   Mon Jan 22 17:42:26 2018 -0800

    Initial Circle implementation with init and area

diff --git a/circuitous.py b/circuitous.py
index 64891c9..4ef8975 100644
--- a/circuitous.py
+++ b/circuitous.py
@@ -5,3 +5,13 @@ to practical applications for cutting edge distributed
 circle management tasks to make the world a better place.
 
 """
+
+import math
+
+class Circle(object):
+
+    def __init__(self, radius):
+        self.radius = radius
+
+    def area(self):
+        return math.pi * self.radius**2.0

commit 27a74bfc0d9cdcf297c6001f55c254e58d36f561
Author: Grant Jenks <contact@grantjenks.com>
Date:   Mon Jan 22 15:29:19 2018 -0800

    Created project name and elevator pitch

diff --git a/circuitous.py b/circuitous.py
new file mode 100644
index 0000000..64891c9
--- /dev/null
+++ b/circuitous.py
@@ -0,0 +1,7 @@
+"""Circuitous (TM)                                      # Project Name
+
+Apply advanced circle analytic theoretical results      # Elevator Pitch
+to practical applications for cutting edge distributed
+circle management tasks to make the world a better place.
+
+"""
